@inject LiveDocs.Shared.Services.IDocumentationService _DocumentationService

<div class="sidebar documents @displayToggleCssClass">
    <ul class="nav flex-column documentation-sidebar text-secondary">
        @foreach (var item in documents)
        {
            <DocumentationSidebarItem Item="item" Path="@Project.Key"></DocumentationSidebarItem>
        }
    </ul>
</div>

@code { 

    [Parameter]
    public LiveDocs.Shared.Services.IDocumentationProject Project { get; set; }

    [Parameter]
    public bool DisplayToggle { get; set; }

    string displayToggleCssClass => DisplayToggle ? "open" : "";

    private LiveDocs.Shared.Services.IDocumentationProject previousProject = null;

    private List<LiveDocs.Shared.Services.IDocumentationDocument> documents;

    protected override Task OnParametersSetAsync()
    {
        if (previousProject == Project)
            return base.OnParametersSetAsync();

        previousProject = Project;


        documents = Project.Documents
            .Where(w => !Project.DefaultDocuments.Any(a => a.Key == w.Key) 
                && w.Key != Project.LandingPage?.Key
                && w.DocumentType != Services.DocumentationDocumentType.Project)
            .GroupBy(g => g.Key)
            .Select(s => s.First()).OrderBy(o => o.Name.ToLower()).ToList();

        return base.OnParametersSetAsync();
    }
}