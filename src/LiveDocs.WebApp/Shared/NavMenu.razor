@inject Microsoft.Extensions.Options.IOptions<LiveDocs.WebApp.Options.LiveDocsOptions> _LiveDocsOptions
@inject IDocumentationService _DocumentationService
    <div class="fixed-top navbar-dark bg-dark mx-auto">
        <nav class="navbar navbar-expand-lg justify-content-center mx-auto">
            <a class="navbar-brand mr-auto mr-lg-0" href="">@_LiveDocsOptions.Value.ApplicationName</a>
            <button class="navbar-toggler p-0 border-0" type="button" data-toggle="offcanvas" @onclick="ToggleNavMenu">
                <span class="navbar-toggler-icon"></span>
            </button>

            <ul class="navbar-nav mr-auto">
                @if (_DocumentationService.DocumentationIndex.Projects.Count > 0)
                {
                    <LiveDocs.Shared.Components.NavLinkDropdownItem Text="Documentation" BaseRoute="/">
                        @foreach (var item in _DocumentationService.DocumentationIndex.Projects.OrderBy(o => o.Name.ToLower()))
                        {
                            <NavLink class="dropdown-item" href="@(item.Key + "/")">@item.Name</NavLink>
                        }
                    </LiveDocs.Shared.Components.NavLinkDropdownItem>
                } else if (_DocumentationService.DocumentationIndex.DefaultProject.DefaultDocuments.Count > 0 && _DocumentationService.DocumentationIndex.DefaultProject.LandingPage != null)
                {
                        
                    <li class="nav-item">
                        <NavLink class="nav-link" href="@(_DocumentationService.DocumentationIndex.DefaultProject.DefaultDocuments.First().Key + "/")" Match="NavLinkMatch.Prefix">
                            Documentation
                        </NavLink>
                    </li>
                } else
                {
                        
                    <li class="nav-item">
                        <NavLink class="nav-link" href="" Match="NavLinkMatch.Prefix">
                            Documentation
                        </NavLink>
                    </li>
                }
            </ul>

            <div class="navbar-collapse offcanvas-collapse @NavMenuCssClass" style="max-width:75rem;">
                <ul class="navbar-nav mr-auto">
                </ul>
                <form class="form-inline my-2 my-lg-0" style="display:none;">
                    <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search" />
                </form>
            </div>
        </nav>
    </div>
@code {
    bool collapseNavMenu = false;

    string NavMenuCssClass => collapseNavMenu ? "open" : null;

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}